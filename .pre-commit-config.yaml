# Pre-commit hooks configuration
# https://pre-commit.com/

repos:
  # General code quality
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-toml
      - id: check-json
      - id: check-xml
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-symlinks
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: detect-private-key
      - id: mixed-line-ending
        args: [--fix=lf]

  # Go specific hooks
  - repo: local
    hooks:
      # Go formatting
      - id: go-fmt
        name: go fmt
        entry: gofmt
        args: [-w]
        language: system
        files: \.go$

      # Go imports
      - id: go-imports
        name: go imports
        entry: goimports
        args: [-w]
        language: system
        files: \.go$
        require_serial: false

      # Go mod tidy
      - id: go-mod-tidy
        name: go mod tidy
        entry: go
        args: [mod, tidy]
        language: system
        files: go\.(mod|sum)$
        pass_filenames: false

      # Go generate
      - id: go-generate
        name: go generate
        entry: go
        args: [generate, ./...]
        language: system
        files: \.go$
        pass_filenames: false

      # Go vet
      - id: go-vet
        name: go vet
        entry: go
        args: [vet, ./...]
        language: system
        files: \.go$
        pass_filenames: false

      # Go tests (fast)
      - id: go-test-short
        name: go test (short)
        entry: go
        args: [test, -short, ./...]
        language: system
        files: \.go$
        pass_filenames: false

      # Go build
      - id: go-build
        name: go build
        entry: go
        args: [build, -v, ./...]
        language: system
        files: \.go$
        pass_filenames: false

  # Go linting with golangci-lint
  - repo: https://github.com/golangci/golangci-lint
    rev: v1.66.0
    hooks:
      - id: golangci-lint
        args: [--fix]

  # Security scanning
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: [--baseline, .secrets.baseline]
        exclude: .*\.lock$

  # Markdown
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.42.0
    hooks:
      - id: markdownlint
        args: [--fix]
        files: \.md$

  # YAML
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.36.0
    hooks:
      - id: yamllint
        args: [-c=.yamllint.yaml]

  # Git commit message format
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.5.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args: [--optional-scope]

  # Docker
  - repo: https://github.com/hadolint/hadolint
    rev: v2.13.1-beta
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009]

# Configuration for specific hooks
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false